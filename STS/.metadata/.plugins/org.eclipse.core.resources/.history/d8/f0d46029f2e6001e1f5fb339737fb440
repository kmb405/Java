package com.coding_dojo.student_roster.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import com.coding_dojo.student_roster.models.Dorm;
import com.coding_dojo.student_roster.models.Student;
import com.coding_dojo.student_roster.services.DormServ;
import com.coding_dojo.student_roster.services.StudentServ;

import jakarta.validation.Valid;

@Controller
public class DormController {
	
	@Autowired
	private DormServ dormServ;
	
	@Autowired
	private StudentServ studentServ;
	
	@GetMapping("/")
	public String dorms(Model model) {
		List<Dorm> dorms = dormServ.allDorms();
		model.addAttribute("dorms", dorms);
		return "dorms.jsp";
	}
	
	@GetMapping("/dorms/new")
	public String newDorm(@ModelAttribute("dorm") Dorm dorm) {
		return "newdorm.jsp";
	}
	
	@GetMapping("/students/new")
	public String newStudent(@ModelAttribute("student") Student student, Model model) {
		List<Dorm> dorms = dormServ.allDorms();
		model.addAttribute("dorms", dorms);
		return "newstudent.jsp";
	}
	
	@GetMapping("/dorms/{dorm_id}")
	public String oneDorm(Model model, @PathVariable("dorm_id") Long dorm_id) {
		Dorm dorm = dormServ.findDorm(dorm_id);
		List<Student> students = studentServ.allStudentsInDorm(dorm_id);
		model.addAttribute("dorm", dorm);
		model.addAttribute("students", students);
		return "onedorm.jsp";
	}
	
	@PostMapping("/createDorm")
	public String createDorm(@Valid @ModelAttribute("dorm") Dorm dorm, BindingResult result) {
		if (result.hasErrors()) {
			return "newdorm.jsp";
		}
		dormServ.createDorm(dorm);
		return "redirect:/";
	}
	
	@PostMapping("/createStudent")
	public String createStudent(@Valid @ModelAttribute("student") Student student, BindingResult result) {
		if (result.hasErrors()) {
			return "newstudent.jsp";
		}
		studentServ.createStudent(student);
		return "redirect:/";
	}
}
